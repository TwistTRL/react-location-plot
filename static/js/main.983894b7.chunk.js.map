{"version":3,"sources":["lib/LocationPlot.js","lib/LocationPlotHoverSelector.js","lib/LocationPlotSelectionLabel.js","lib/index.js","sampleData.js","index.js"],"names":["COLOR_LUT","other","8s","8e","home","LocationPlot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ref","React","createRef","_this$props","height","width","react_default","a","createElement","style","backgroundColor","display","draw","_this$props2","data","minX","maxX","ctx","current","getContext","clearRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","rec","value","end","start","startDomX","Math","round","toDomXCoord_Linear","endDomX","color","fillStyle","fillRect","err","return","PureComponent","LocationPlotHoverSelector","nextProps","nextState","hoveringPosition","select","selectHandler","hoveringDomX","hoveringDataX","fromDomXCoord_Linear","Component","ID_KEY","LocationPlotSelectionLabel","indexData","memoize_one","ret","selection","indexedData","domStart","domEnd","label","labelDomX","max","min","className","left","stretch","num","targetMin","targetMax","sample","array","rand","random","floor","length","DATA_MIN_X","DATA_MAX_X","LOCATION","name","last","i","NAME","START","END","ID","filter","n","push","timeMax","apply","toConsumableArray","map","forEach","LocationPlotBundle","state","_this2","_this$state","Fragment","type","onChange","ev","setState","Number","parseInt","target","maxHeight","overflow","JSON","stringify","lib","LocationPlotFullBundle","_this3","_this4","position","src_lib_LocationPlotSelectionLabel","dist","transitionGraph","INTERACTION_MODEL_BARE","render","interactions","lib_LocationPlotHoverSelector","id","App","react_router_dom","to","react_router","path","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.983894b7.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from \"prop-types\";\nimport {toDomXCoord_Linear} from \"plot-utils\";\n\nconst START_KEY = \"START\";\nconst END_KEY = \"END\";\nconst NAME_KEY = \"NAME\";\nconst ID_KEY = \"ID\";\n\nconst COLOR_LUT={\"other\":\"#5084de\",\n                 \"8s\":\"#de5f50\",\n                 \"8e\":\"#deb150\",\n                 \"home\":\"#7eca8a\"\n                 };\n\nclass LocationPlot extends PureComponent {\n  constructor(props){\n    super(props);\n    this.ref = React.createRef();\n  }\n  \n  render() {\n    let { height,\n          width } = this.props;\n    return (\n      <canvas ref={this.ref} width={width} height={1}\n              style={{height:height,width:width,backgroundColor:\"lightgrey\",display:\"block\"}}>\n      </canvas>\n    );\n  }\n  \n  componentDidMount(){\n    this.draw();\n  }\n  \n  componentDidUpdate() {\n    this.draw();\n  }\n  \n  draw() {\n    let { data,\n          minX,maxX,width} = this.props;\n    let canvas = this.ref.current;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0,0,width,1);\n    for (let rec of data) {\n      // O(n) linear filtering\n      if (rec.end<minX || maxX<rec.start){\n        continue;\n      }\n      let startDomX = Math.round(toDomXCoord_Linear(width,minX,maxX,rec[START_KEY]));\n      let endDomX = Math.round(toDomXCoord_Linear(width,minX,maxX,rec[END_KEY]));\n      let color = COLOR_LUT[rec[NAME_KEY]];\n      ctx.fillStyle = color;\n      ctx.fillRect(startDomX,0,endDomX-startDomX,1)\n    }\n  }\n}\n\nLocationPlot.propTypes = {\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n}\n\nexport default LocationPlot;\n","import { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {fromDomXCoord_Linear} from \"plot-utils\";\n\nconst START_KEY = \"START\";\nconst END_KEY = \"END\";\nconst ID_KEY = \"ID\";\n\nclass LocationPlotHoverSelector extends Component {\n  render(){\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps,nextState){\n    if (nextProps.hoveringPosition!==this.props.hoveringPosition) {\n      return true;\n    }\n    return false\n  }\n\n  componentDidMount(){\n    this.select();\n  }\n  \n  componentDidUpdate(){\n    this.select();\n  }\n\n  select() {\n    let { data, /* [ {ID,START,END,...},... ] */\n          minX,maxX,width,\n          hoveringPosition,\n          selectHandler} = this.props;\n    if (hoveringPosition===null) {\n      selectHandler(null);\n      return;\n    }\n    let hoveringDomX = hoveringPosition[\"domX\"];\n    let hoveringDataX = fromDomXCoord_Linear(width,minX,maxX,hoveringDomX);\n    for (let rec of data){\n      if (rec[START_KEY]<hoveringDataX && hoveringDataX<rec[END_KEY]) {\n        selectHandler(rec[ID_KEY]);\n        break;\n      }\n    }\n  }\n}\n\nLocationPlotHoverSelector.propTypes = {\n  data: PropTypes.array.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  hoveringPosition: PropTypes.object,\n  selectHandler: PropTypes.func.isRequired\n}\n\nexport default LocationPlotHoverSelector;\n","import React, { PureComponent } from 'react';\nimport {memoize_one} from \"memoize\";\nimport PropTypes from \"prop-types\";\nimport {toDomXCoord_Linear} from \"plot-utils\";\n// CSS\nimport \"./LocationPlotSelectionLabel.css\";\n\nconst START_KEY = \"START\";\nconst END_KEY = \"END\";\nconst NAME_KEY = \"NAME\";\nconst ID_KEY = \"ID\";\n\nclass LocationPlotSelectionLabel extends PureComponent {\n  render() {\n    let { data, /* [ {ID,START,END,...},... ] */\n          selection, /* id */\n          minX,maxX,\n          width,height} = this.props;\n    if ( !(selection in data) ) {\n      return null;\n    }\n\n    let indexedData = this.indexData(data);\n    let domStart = toDomXCoord_Linear(width,minX,maxX,indexedData[selection][START_KEY]);\n    let domEnd = toDomXCoord_Linear(width,minX,maxX,indexedData[selection][END_KEY]);\n    let label = indexedData[selection][NAME_KEY];\n    let labelDomX = (Math.max(0,domStart)+Math.min(width,domEnd))/2;\n    return (\n      <div className=\"LocationPlotSelectionLabel\" style={{width:width,height:height}}>\n        <div className=\"LocationPlotSelectionLabel-float\" style={{left:labelDomX}}>\n          {label}\n        </div>\n      </div>\n    );\n  }\n\n  indexData = memoize_one( (data)=>{\n    let ret = {};\n    for (let rec of data) {\n      ret[rec[ID_KEY]] = rec;\n    }\n    return ret;\n  });\n}\n\nLocationPlotSelectionLabel.propTypes = {\n  data: PropTypes.array.isRequired,\n  selection: PropTypes.number,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n}\n\nexport default LocationPlotSelectionLabel;\n","import LocationPlot from \"./LocationPlot\";\nimport LocationPlotHoverSelector from \"./LocationPlotHoverSelector\";\nimport LocationPlotSelectionLabel from \"./LocationPlotSelectionLabel\";\n\nexport default LocationPlot;\nexport {LocationPlotHoverSelector,LocationPlotSelectionLabel};\n","function stretch(num,min,max,targetMin,targetMax){\n  return (num-min)/(max-min)*(targetMax-targetMin)+targetMin;\n}\n\nfunction sample(array){\n  let rand = Math.random();\n  let randIdx = Math.floor(rand*array.length);\n  return array[randIdx];\n}\n\nexport const DATA_MIN_X = 1508076120000;\n\nexport const DATA_MAX_X = 1509915960000;\n\nexport const LOCATION = ( function(){\n  let dataPointCount = 10;\n  let name = [\"other\",\"home\",\"8s\",\"8e\"];\n  let ret = [];\n  let last = null;\n  for (let i=0;i<dataPointCount;i++){\n    if (last===null) {\n      last = {'NAME':sample(name),'START':0,'END':Math.random(),'ID':i};\n    }\n    else {\n      last = {'NAME':sample(name.filter( n=>n!==last[\"name\"] )),'START':last[\"END\"],'END':last[\"END\"]+Math.random(),'ID':i};\n    }\n    ret.push(last);\n  }\n  let timeMin = 0;\n  let timeMax = Math.max(...ret.map( (rec)=>rec[\"END\"] ));\n  ret.forEach( (rec)=>{\n      rec[\"END\"] = stretch(rec[\"END\"],timeMin,timeMax,DATA_MIN_X,DATA_MAX_X);\n      rec[\"START\"] = stretch(rec[\"START\"],timeMin,timeMax,DATA_MIN_X,DATA_MAX_X);\n    });\n  return ret;\n})();\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {PlotInteractionProvider, INTERACTION_MODEL_BARE} from \"react-plot-interaction-box\";\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\";\n\nimport LocationPlot,{LocationPlotSelectionLabel,LocationPlotHoverSelector}  from \"./lib\";\n\n// CSS\nimport \"./index.css\";\n\n// data\nimport {LOCATION,DATA_MIN_X,DATA_MAX_X} from \"./sampleData\";\n\nclass LocationPlotBundle extends Component {\n  constructor(props){\n    super(props);\n    this.state={width:500,\n                height:30,\n                minX:DATA_MIN_X,\n                maxX:DATA_MAX_X\n                };\n  }\n  \n  render() {\n    let {width,height,minX,maxX} = this.state;\n    return (\n      <>\n        <fieldset>\n          <legend>Props</legend>\n          <div>\n            width\n            <input type=\"range\" min={500} max={1000} value={width}\n                                onChange={(ev)=>this.setState({width:Number.parseInt(ev.target.value)})}/>\n            {width}\n          </div>\n          <div>\n            height\n            <input type=\"range\" min={20} max={50} value={height}\n                                onChange={(ev)=>this.setState({height:Number.parseInt(ev.target.value)})}/>\n            {height}\n          </div>\n          <div>\n            minX\n            <input type=\"range\" min={DATA_MIN_X} max={maxX} value={minX}\n                                onChange={(ev)=>this.setState({minX:Number.parseInt(ev.target.value)})}/>\n            {minX}\n          </div>\n          <div>\n            maxX\n            <input type=\"range\" min={minX} max={DATA_MAX_X} value={maxX}\n                                onChange={(ev)=>this.setState({maxX:Number.parseInt(ev.target.value)})}/>\n            {maxX}\n          </div>\n          <div>\n            data\n            <pre style={{maxHeight:600,overflow:\"scroll\"}}>\n              {JSON.stringify(LOCATION,null,' ')}\n            </pre>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Result</legend>\n          <LocationPlot  width={width}\n                          height={height}\n                          minX={minX}\n                          maxX={maxX}\n                          data={LOCATION}\n                          />\n        </fieldset>\n      </>\n    );\n  }\n}\n\nclass LocationPlotFullBundle extends Component {\n  constructor(props) {\n    super(props);\n    this.state={selection: null\n                }\n  }\n  \n  render() {\n    let width = 500;\n    let height = 30;\n    let minX = DATA_MIN_X;\n    let maxX = DATA_MAX_X;\n    let {selection} = this.state;\n    return (\n      <>\n        <fieldset>\n          <legend>Comment</legend>\n          LocationPlot, LocationPlotSelectionLabel, LocationPlotHoverSelector and PlotInteractionProvider working in unison.\n          PlotInteractionProvider=>LocationPlotHoverSelector=>\"update state\"=>LocationPlotSelectionLabel\n        </fieldset>\n        <fieldset>\n          <legend>Result</legend>\n          <div style={{width:width,height:height}}>\n            <div style={{position:\"absolute\",width:width,height:height}}>\n              <LocationPlot width={width}\n                            height={height}\n                            minX={minX}\n                            maxX={maxX}\n                            data={LOCATION}\n                            />\n            </div>\n            <div style={{position:\"absolute\", width:width,height:height}}>\n              <LocationPlotSelectionLabel width={width}\n                                          height={height}\n                                          minX={minX}\n                                          maxX={maxX}\n                                          data={LOCATION}\n                                          selection={selection}\n                                          />\n            </div>\n            <div style={{position:\"absolute\", width:width,height:height}}>\n              <PlotInteractionProvider  width={width} height={height}\n                                        transitionGraph={INTERACTION_MODEL_BARE}\n                                        render={(interactions)=>\n                <LocationPlotHoverSelector  data={LOCATION}\n                                            minX={minX}\n                                            maxX={maxX}\n                                            width={width}\n                                            hoveringPosition={interactions.hoveringPosition}\n                                            selectHandler={ (id)=>{this.setState({selection:id})} }\n                                            />\n                                        }\n                                        />\n            </div>\n          </div>\n        </fieldset>\n      </>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return(\n      <Router>\n        <nav className=\"app\">\n          <Link to=\"/LocationPlot\">LocationPlot</Link>\n          <Link to=\"/LocationPlot_full\">LocationPlot with all its glory</Link>\n        </nav>\n        <Route path=\"/LocationPlot\" component={LocationPlotBundle} />\n        <Route path=\"/LocationPlot_full\" component={LocationPlotFullBundle} />\n      </Router>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}