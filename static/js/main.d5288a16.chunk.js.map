{"version":3,"sources":["lib/LocationsPlot.js","lib/LocationsPlotHoverSelector.js","lib/LocationsPlotSelectionLabel.js","lib/index.js","sample.js","index.js"],"names":["COLOR_LUT","other","8s","8e","home","LocationsPlot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ref","React","createRef","_this$props","height","width","react_default","a","createElement","style","backgroundColor","display","draw","_this$props2","data","minX","maxX","ctx","current","getContext","clearRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","rec","value","end","start","startDomX","Math","max","toDomXCoord_Linear","endDomX","min","color","name","fillStyle","fillRect","err","return","PureComponent","LocationsPlotHoverSelector","nextProps","nextState","hoveringPosition","select","selectHandler","select_memo","memo","starts","map","_ref","ends","_ref2","hoverDomX","domX","hoverX","fromDomXCoord_Linear","startIndex","bisect_left","endIndex","bisect_right","Component","LocationsPlotSelectionLabel","selection","domStart","domEnd","label","labelDomX","className","left","Other","8S","8E","Home","8S_ongoing","Infinity","mix","LocationsPlotBundle","state","data_","_this2","_this$state","Fragment","type","onChange","ev","setState","Number","parseInt","target","JSON","stringify","lib","LocationsPlotFullBundle","_this3","_this4","mixedData","position","src_lib_LocationsPlotSelectionLabel","dist","transitionGraph","INTERACTION_MODEL_BARE","render","positions","lib_LocationsPlotHoverSelector","obj","App","react_router_dom","to","react_router","path","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5288a16.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from \"prop-types\";\nimport {bisect_left,bisect_right} from \"bisect\";\nimport {toDomXCoord_Linear} from \"plot-utils\";\n\nconst COLOR_LUT={\"other\":\"#5084de\",\n                 \"8s\":\"#de5f50\",\n                 \"8e\":\"#deb150\",\n                 \"home\":\"#7eca8a\"\n                 };\n\nclass LocationsPlot extends PureComponent {\n  constructor(props){\n    super(props);\n    this.ref = React.createRef();\n  }\n  \n  render() {\n    let { height,\n          width } = this.props;\n    return (\n      <canvas ref={this.ref} width={width} height={1}\n              style={{height:height,width:width,backgroundColor:\"lightgrey\",display:\"block\"}}>\n      </canvas>\n    );\n  }\n  \n  componentDidMount(){\n    this.draw();\n  }\n  \n  componentDidUpdate() {\n    this.draw();\n  }\n  \n  draw() {\n    let { data,\n          minX,maxX,width} = this.props;\n    let canvas = this.ref.current;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0,0,width,1);\n    for (let rec of data) {\n      if (rec.end<minX || maxX<rec.start){\n        continue;\n      }\n      let startDomX = Math.max(0,toDomXCoord_Linear(width,minX,maxX,rec.start));\n      let endDomX = Math.min(width,toDomXCoord_Linear(width,minX,maxX,rec.end));\n      let color = COLOR_LUT[rec.name];\n      ctx.fillStyle = color;\n      ctx.fillRect(startDomX,0,endDomX-startDomX,1)\n    }\n  }\n}\n\nLocationsPlot.propTypes = {\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n}\n\nexport default LocationsPlot;\n","import { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {bisect_left,\n        bisect_right} from \"bisect\";\nimport {fromDomXCoord_Linear} from \"plot-utils\";\n\nclass LocationsPlotHoverSelector extends Component {\n  render(){\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps,nextState){\n    if (nextProps.hoveringPosition!==this.props.hoveringPosition) {\n      return true;\n    }\n    return false\n  }\n\n  componentDidMount(){\n    this.select();\n  }\n  \n  componentDidUpdate(){\n    this.select();\n  }\n\n  select() {\n    let { data, /* [{start,end},...] sorted asc*/\n          minX,maxX,width,\n          hoveringPosition,\n          selectHandler} = this.props;\n    if (hoveringPosition===undefined) {\n      return;\n    }\n    if (hoveringPosition===null) {\n      selectHandler(null);\n      return;\n    }\n    this.select_memo = this.select_memo || {};\n    let memo = this.select_memo;\n    if (memo.data !== data) {\n      memo.data = data;\n      memo.starts = data.map(({start})=>start);\n      memo.ends = data.map(({end})=>end);\n    }\n    let hoverDomX = hoveringPosition.domX;\n    let hoverX = fromDomXCoord_Linear(width,minX,maxX,hoverDomX);\n    let startIndex = bisect_left(memo.starts,hoverX);\n    let endIndex = bisect_right(memo.ends,hoverX);\n    if (startIndex > endIndex) {\n      selectHandler(null);\n    }\n    else {\n      let selection = data[endIndex];\n      selectHandler(selection);\n    }\n  }\n}\n\nLocationsPlotHoverSelector.propTypes = {\n  data: PropTypes.array.isRequired,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  hoveringPosition: PropTypes.object,\n  selectHandler: PropTypes.func.isRequired\n}\n\nexport default LocationsPlotHoverSelector;\n","import React, { PureComponent } from 'react';\nimport PropTypes from \"prop-types\";\nimport {toDomXCoord_Linear} from \"plot-utils\";\nimport \"./LocationsPlotSelectionLabel.css\"\n\nclass LocationsPlotSelectionLabel extends PureComponent {\n  render() {\n    let { selection, /* {name,start,end} */\n          minX,maxX,\n          width,height} = this.props;\n    if (!selection) {\n      return null;\n    }\n    let domStart = toDomXCoord_Linear(width,minX,maxX,selection.start);\n    let domEnd = toDomXCoord_Linear(width,minX,maxX,selection.end);\n    let label = selection.name;\n    let labelDomX = (Math.max(0,domStart)+Math.min(width,domEnd))/2;\n    return (\n      <div className=\"LocationsPlotSelectionLabel\" style={{width:width,height:height}}>\n        <div className=\"LocationsPlotSelectionLabel-float\" style={{left:labelDomX}}>\n          {label}\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationsPlotSelectionLabel.propTypes = {\n  selection: PropTypes.object,\n  minX: PropTypes.number.isRequired,\n  maxX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n}\n\nexport default LocationsPlotSelectionLabel;\n","import LocationsPlot from \"./LocationsPlot\";\nimport LocationsPlotHoverSelector from \"./LocationsPlotHoverSelector\";\nimport LocationsPlotSelectionLabel from \"./LocationsPlotSelectionLabel\";\n\nexport default LocationsPlot;\nexport {LocationsPlotHoverSelector,LocationsPlotSelectionLabel};\n","const data =  {\n  \"Other\": [{name:\"other\",start:0,end:500}],\n  \"8S\": [{name:\"8s\",start:500,end:1000}],\n  \"8E\": [{name:\"8e\",start:1000,end:1500}],\n  \"Home\": [{name:\"home\",start:1500,end:2000}],\n  \"8S_ongoing\": [{name:\"8s\",start:1500,end:Infinity}],\n  \"mix\": [{name:\"home\",start:0,end:20},\n          {name:\"other\",start:30,end:500},\n          {name:\"8s\",start:500,end:1000},\n          {name:\"8e\",start:1000,end:1500},\n          {name:\"home\",start:1600,end:Infinity}\n          ]\n}\n\nexport default data;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {PlotInteractionProvider, INTERACTION_MODEL_BARE} from \"react-plot-interaction-box\";\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\";\n\nimport LocationsPlot, {LocationsPlotSelectionLabel,LocationsPlotHoverSelector}  from \"./lib\";\n\n// CSS\nimport \"./index.css\";\n\n// data\nimport data from \"./sample\";\n\nclass LocationsPlotBundle extends Component {\n  constructor(props){\n    super(props);\n    this.state={width:500,\n                height:30,\n                minX:0,\n                maxX:2000,\n                data_:\"Other\"\n                };\n  }\n  \n  render() {\n    let {width,height,minX,maxX,data_} = this.state;\n    return (\n      <>\n        <fieldset>\n          <legend>Props</legend>\n          <div>\n            width\n            <input type=\"range\" min={500} max={1000} value={width}\n                                onChange={(ev)=>this.setState({width:Number.parseInt(ev.target.value)})}/>\n            {width}\n          </div>\n          <div>\n            height\n            <input type=\"range\" min={20} max={50} value={height}\n                                onChange={(ev)=>this.setState({height:Number.parseInt(ev.target.value)})}/>\n            {height}\n          </div>\n          <div>\n            minX\n            <input type=\"range\" min={0} max={maxX} value={minX}\n                                onChange={(ev)=>this.setState({minX:Number.parseInt(ev.target.value)})}/>\n            {minX}\n          </div>\n          <div>\n            maxX\n            <input type=\"range\" min={minX} max={2000} value={maxX}\n                                onChange={(ev)=>this.setState({maxX:Number.parseInt(ev.target.value)})}/>\n            {maxX}\n          </div>\n          <div>\n            data\n            <select value={data_}\n                    onChange={(ev)=>this.setState({data_:ev.target.value})}>\n              <option value=\"Other\">Other</option>\n              <option value=\"8S\">8S</option>\n              <option value=\"8E\">8E</option>\n              <option value=\"Home\">Home</option>\n              <option value=\"8S_ongoing\">8S, ongoing</option>\n              <option value=\"mix\">mix</option>\n            </select>\n            <pre>\n              {JSON.stringify(data[data_],null,' ')}\n            </pre>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Result</legend>\n          <LocationsPlot  width={width}\n                          height={height}\n                          minX={minX}\n                          maxX={maxX}\n                          data={data[data_]}\n                          />\n        </fieldset>\n      </>\n    );\n  }\n}\n\nclass LocationsPlotFullBundle extends Component {\n  constructor(props) {\n    super(props);\n    this.state={selection: null\n                }\n  }\n  \n  render() {\n    let width = 500;\n    let height = 30;\n    let minX = 0;\n    let maxX = 2500;\n    let mixedData = data[\"mix\"];\n    let {selection} = this.state;\n    \n    return (\n      <>\n        <fieldset>\n          <legend>Comment</legend>\n          LocationsPlot, LocationsPlotSelectionLabel, LocationsPlotHoverSelector and PlotInteractionProvider working in unison.\n          PlotInteractionProvider=>LocationsPlotHoverSelector=>\"update state\"=>LocationsPlotSelectionLabel\n        </fieldset>\n        <fieldset>\n          <legend>Result</legend>\n          <div style={{width:width,height:height}}>\n            <div style={{position:\"absolute\",width:width,height:height}}>\n              <LocationsPlot  width={width}\n                              height={height}\n                              minX={0}\n                              maxX={2600}\n                              data={mixedData}\n                              />\n            </div>\n            <div style={{position:\"absolute\", width:width,height:height}}>\n              <LocationsPlotSelectionLabel  width={width}\n                                            height={height}\n                                            minX={0}\n                                            maxX={2600}\n                                            selection={selection}\n                                            />\n            </div>\n            <div style={{position:\"absolute\", width:width,height:height}}>\n              <PlotInteractionProvider  width={width} height={height}\n                                        transitionGraph={INTERACTION_MODEL_BARE}\n                                        render={(positions)=>\n                <LocationsPlotHoverSelector data={mixedData}\n                                            minX={minX}\n                                            maxX={maxX}\n                                            width={width}\n                                            hoveringPosition={positions.hoveringPosition}\n                                            selectHandler={(obj)=>this.setState({selection:obj})}\n                                            />\n                                        }\n                                        />\n            </div>\n          </div>\n        </fieldset>\n      </>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return(\n      <Router>\n        <nav className=\"app\">\n          <Link to=\"/LocationsPlot\">LocationsPlot</Link>\n          <Link to=\"/LocationsPlot_full\">LocationsPlot with all its glory</Link>\n        </nav>\n        <Route path=\"/LocationsPlot\" component={LocationsPlotBundle} />\n        <Route path=\"/LocationsPlot_full\" component={LocationsPlotFullBundle} />\n      </Router>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}